
#sudo ip netns add nstns1 --- adding one namespace
#suod ip netns list

#sudo apt install net-tools
#sudo ifconfig

--to entering the new namespace
# sudo ip netns exec red sh
#ifconfig   --- no interface 

#sudo route   -- has mapping
--Entering again red namespace 
#sudo ip netns exec red sh
#sudo route

---no link found between / namespace & red namespace
--- now need to create a virtual cable
#sudo ip link add veth0 type veth peer name ceth0  -it is addedd in / namespace
# sudo ip list  --- checking total interface
lo
eth0
ceth0
veth0

#sudo ip link set ceth0 netns red  -- add one part of the cable with red
#sudo ip link list --checking the free cable 

---logging in the rednamespace
#sudo ip netns exec red sh
#ip link -- we will found the ceth0 here
#ip addr add 192.168.0.3/16 dev ceth0  --adding the ip address with port
#ip addr  -- checking newly added ip address
#ip link set ceth0 up  -- to up he port
#ip addr -- check ip but lower layer is down
#exit -- exit from rednamesapce
#sudo ip addr add 172.168.0.2/16 dev veth0 -- keep the IP same in another port 
#sudo ip addr -- still down from both end because we don't up the veth0( inside the red namespace & host machine)

#sudo ip set veth0 up -- now up the veth0
#sudo ip addr  -- checking the status ... it is up now

Now checking the host route table
# route
it is added a new domian 172.168.0.0. Now if we ping the 172.168.0.7 .... it will go veth0

But it is not actually a process because eth0 is only single port and it will be connected with veth0. In this situation, other container will be  not connected.
So the ultimate solution is switch. here is the daigram.

request -> eth0 -> iptables -> route-> switch -> veth0_ceth0

###----Now we will create a bridge------------------
reference link :
https://github.com/dipanjal/DevOps/tree/main/NetNS_Ingress_Egress_Traffic

#sudo ip netns add netns1 -- create a new namespace
#sudo ip netns list

#sudo ip link add br0 type bridge -- create a new bridge 
#sudo ip addr --display the bridge 
br0 is newly added here & now need to up the link
#sudo ip link set br0 up
#sudo ip addr -- check br0 status & now it is unkwon status. Now, we will provide the IP address.

#sudo ip addr add 172.168.0.1/16 br0
#sudo ip addr -- it wil show the inet addree for br0 and if we ping it , it will go to the swith 

Now we will create a cable to connect with the bridge
#sudo ip link add veth1 type veth peer name ceth1
#sudo ip link set veth1 master br0  --added the veth1 with bridge
# sudo ip link -- for checking he current status 
now add the another port with namespace netns1
#sudo ip netns exec netns1 sh   --login in the netns1 namespace 
#ip link  -- ceth1 is available but down 
#ip link set lo up
# ip link set cethns1 up
# ip link --checking the IP link
# ip addr add 192.168.0.2/16 dev ceth1 -- adding ip address
# ip addr --checking IP address
#exit -- now exit from netns1 namespace


Now up the down port at bridge end
#sudo ip link set veth1 up
#sudo ip netns exec netns1 sh  --- login again the namespace to check the link status 
#ip addr -- ceth1 port is up
# ping 8.8.8.8 -- it is down
#exit -- exit the netns1

host machine 
#ping 172.168.0.2 working -- need to check how is it working
#route -- here we can see the new brige br0

Again login the netns1 to check the route table 
#sudo ip netns exec netns1 sh -- login into netns1
# ping 8.8.8.8 -- network not available
# route -- still not working bacause it is not connected with switch

---


Home work:
In this doccumentation, we will cover

Namespace to Bridge Communication
Namespace to Root Namespace Communication via Bridge
Internet Connectivity | ping 8.8.8.8
Access to Namespace from Outside of the network
https://github.com/dipanjal/DevOps/tree/main/NetNS_Ingress_Egress_Traffic


